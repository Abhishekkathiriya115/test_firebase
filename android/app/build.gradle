// android/app/build.gradle
plugins {
    id 'com.android.application'
    id 'kotlin-android' // If you are using Kotlin
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.testing_pro"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    dexOptions {
        preDexLibraries false
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 34
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        flavorDimensions "default"
        productFlavors {
            dev {
                applicationId "com.example.testing_pro.dev"
                dimension "default"
                versionNameSuffix "-dev"
            }
            dev2 {
                applicationId "com.example.testing_pro.dev2"
                dimension "default"
                versionNameSuffix "-dev2"
            }
            prod {
                applicationId "com.example.testing_pro.prod"
                dimension "default"
                versionNameSuffix "-prod"
            }
        }
        sourceSets {
            dev {
                res.srcDirs = ['dev/res']
            }
            dev2 {
                res.srcDirs = ['dev2/res']
            }
            prod {
                res.srcDirs = ['prod/res']
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${variant.baseName}-${versionName}.apk"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation 'androidx.activity:activity-ktx:1.4.0'
}

apply plugin: 'com.google.gms.google-services'

googleServices { disableVersionCheck = true }

preBuild.dependsOn 'processDevDebugGoogleServices'
preBuild.dependsOn 'processDev2DebugGoogleServices'
preBuild.dependsOn 'processProdDebugGoogleServices'
